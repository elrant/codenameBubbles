name: Electron Forge Build

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: electron
        
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20

    - name: Install dependencies
      run: npm install

    - name: Build Electron app
      run: npx electron-forge make

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: out

    - name: Get Package Version
      id: get_version
      run: echo "::set-output name=package_version::$(node -e 'console.log(require("./package.json").version)')"

    - name: Create Draft Release
      id: create_draft
      run: |
        echo "Creating a draft release"
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d '{
            "tag_name": "${{ steps.get_version.outputs.package_version }}",
            "target_commitish": "main",
            "name": "Release ${{ steps.get_version.outputs.package_version }}",
            "body": "This is a draft release.",
            "draft": true
          }' \
          "https://api.github.com/repos/${{ github.repository }}/releases"
      continue-on-error: true

    - name: Get Release ID
      id: get_release_id
      run: echo "::set-output name=release_id::$(jq -r '.id' $GITHUB_EVENT_PATH)"

    - name: Upload Release Assets
      uses: actions/upload-release-assets@v1
      with:
        upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.get_release_id.outputs.release_id }}/assets
        asset_path: out/**/*
        asset_name: ${{ runner.os }}-artifact.zip
